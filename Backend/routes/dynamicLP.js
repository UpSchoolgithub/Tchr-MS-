const express = require("express");
const axios = require("axios");

const router = express.Router();

// POST Route for generating lesson plan dynamically
router.post("/dynamicLP", async (req, res) => {
    try {
        const {
            board,
            grade,
            subject,
            subSubject,
            unit,
            chapter,
            topics,
            sessionType,
            noOfSession,
            duration,
        } = req.body;

        // Validate payload
        if (!board || !grade || !subject || !chapter || !topics || topics.length === 0) {
            return res.status(400).json({
                message: "Invalid payload. Missing required fields or topics.",
            });
        }

        // Prepare payload to send to the Python microservice
        const payload = {
            board,
            grade,
            subject,
            subSubject,
            unit,
            chapter,
            topics,
            sessionType,
            noOfSession,
            duration,
        };

        console.log("Payload sent to Python service:", payload); // Debugging

        // Python microservice URL
        const pythonServiceUrl = "https://dynamiclp.up.school/generate-lesson-plan";

        // Make a POST request to the Python service
// Validate response from Python service
const response = await axios.post(pythonServiceUrl, payload);
if (!response.data.lesson_plan) {
  throw new Error("Lesson plan not generated by Python service.");
}
res.status(200).json(response.data);

        // Send back the response from the Python service to the frontend
        res.status(200).json(response.data);
    } catch (error) {
        console.error("Error in dynamicLP route:", error.message);
        if (error.response) {
            console.error("Python service error:", error.response.data);
        }
        res.status(500).json({
            message: "Failed to generate lesson plan. Please try again.",
            error: error.message,
        });
    }
});

module.exports = router;
